<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.swm.board.mapper.ListMapper">
    <resultMap id="placeResultMap" type="kr.co.swm.board.list.model.DTO.ListDTO">
        <result column="ACCOMMODATION_ADMIN_NO" property="boardNo"></result>
        <result column="NAME" property="boardName"></result>
        <result column="ACCOMMODATION_TYPE" property="boardType"></result>
        <result column="ADDRESS" property="boardAddress"></result>
        <result column="CHECK_IN_TIME" property="boardCheckIn"></result>
        <result column="BASIC_RATE" property="boardCount"></result>
        <result column="CHECK_IN_DATE" property="checkinDate"></result>
        <result column="CHECK_OUT_DATE" property="checkoutDate"></result>
        <result column="FACILITY_NAME" property="options"></result>
        <result column="AC_IMAGE_FILE" property="fileName"></result>
    </resultMap>


    <!-- 장소 -->
    <select id="getPlace" resultMap="placeResultMap">

        SELECT ab.ACCOMMODATION_ADMIN_NO,
        ab.NAME,
        ab.ACCOMMODATION_TYPE,
        ab.ADDRESS,
        GROUP_CONCAT(DISTINCT r.CHECK_IN_TIME) AS CHECK_IN_TIMES,
        GROUP_CONCAT(DISTINCT f.FACILITY_NAME) AS FACILITY_NAMES,
        MIN(br.BASIC_RATE) AS BASIC_RATE
        FROM
        (SELECT a.ACCOMMODATION_ADMIN_NO, a.NAME, a.ACCOMMODATION_TYPE, a.ADDRESS
        FROM facilities f
        JOIN accommodation a ON a.ACCOMMODATION_ADMIN_NO = f.ACCOMMODATION_ADMIN_NO
        <if test="searchDTO.options != null and searchDTO.options.size() > 0">
            WHERE f.FACILITY_NAME IN
            <foreach item="options" collection="searchDTO.options" open="(" separator="," close=")">
                #{options}
            </foreach>
        </if>
        ) ab
        JOIN room r ON ab.ACCOMMODATION_ADMIN_NO = r.ACCOMMODATION_ADMIN_NO
        JOIN basic_rate br ON r.ROOM_NO = br.ROOM_NO
        JOIN facilities f ON f.ACCOMMODATION_ADMIN_NO = ab.ACCOMMODATION_ADMIN_NO
        <if test='searchDTO.type != null and !searchDTO.type.equals("전체")'>
            WHERE ab.ACCOMMODATION_TYPE = #{searchDTO.type}
        </if>
        GROUP BY ab.ACCOMMODATION_ADMIN_NO, ab.NAME, ab.ACCOMMODATION_TYPE, ab.ADDRESS
        HAVING MIN(br.BASIC_RATE) BETWEEN #{searchDTO.minRate} AND #{searchDTO.maxRate}
        ORDER BY ab.ACCOMMODATION_ADMIN_NO
        LIMIT #{pi.boardLimit} OFFSET #{pi.offset}

    </select>



    <!-- 게시글의 총 개수 (옵션 조건부)-->
    <!--
        1. 유형만 검색했을 떄
        2. 가격만 검색했을 떄
        3. 옵션만 검색헀을 떄
        4. 전체 선택 후 검색했을 때
    -->

    <select id="getTotalCount" resultType="int">
            SELECT
            COUNT(DISTINCT ac.ACCOMMODATION_ADMIN_NO)
            FROM ACCOMMODATION ac
            JOIN ROOM r ON ac.ACCOMMODATION_ADMIN_NO = r.ACCOMMODATION_ADMIN_NO
            JOIN (
            SELECT ROOM_NO, MIN(BASIC_RATE) AS MIN_RATE
            FROM BASIC_RATE
            GROUP BY ROOM_NO
            ) br_min ON r.ROOM_NO = br_min.ROOM_NO
            <where>
                <choose>
                    <when test='searchDTO.type != null and !searchDTO.type.isEmpty() and !searchDTO.type.equals("전체")'>
                        ac.ACCOMMODATION_TYPE = #{searchDTO.type}
                    </when>
                    <when test="searchDTO.minRate != null and searchDTO.maxRate != null">
                        br_min.MIN_RATE BETWEEN #{searchDTO.minRate} AND #{searchDTO.maxRate}
                    </when>
                    <when test="searchDTO.options != null and !searchDTO.options.isEmpty()">
                        ac.FACILITY_NAME IN (
                        <foreach item="options" collection="searchDTO.options" separator="," open="" close="">
                            #{options}
                        </foreach>
                        )
                    </when>
                </choose>
            </where>
    </select>



    <!-- 최저 기본 가격 -->
    <select id="getCost" resultMap="placeResultMap">
        select distinct basic_rate_no,basic_rate from BASIC_RATE
        where basic_rate_no = 1
    </select>

    <!-- tour페이지에서 부대시설 항목 불러오기-->
    <select id="getUniqueFacilities" resultType="String">
        SELECT DISTINCT f.FACILITY_NAME
        FROM FACILITIES f
        JOIN ACCOMMODATION ac ON f.ACCOMMODATION_ADMIN_NO = ac.ACCOMMODATION_ADMIN_NO
    </select>




    <!-- getListCount 쿼리 -->
    <select id="getListCount" resultType="int">
        SELECT COUNT(DISTINCT ac.ACCOMMODATION_ADMIN_NO)
        FROM ACCOMMODATION ac
        JOIN ROOM r ON ac.ACCOMMODATION_ADMIN_NO = r.ACCOMMODATION_ADMIN_NO
        JOIN BASIC_RATE br ON r.ROOM_NO = br.ROOM_NO
        <where>
            <if test="mainSearchDTO.mainSearch != null and !mainSearchDTO.mainSearch.isEmpty()">
                (ac.NAME LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%')
                OR ac.ADDRESS LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%')
                OR ac.ACCOMMODATION_TYPE LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%')
                OR br.BASIC_RATE LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%'))
            </if>
            <if test="mainSearchDTO.type != null and !mainSearchDTO.type.isEmpty()">
                AND ac.ACCOMMODATION_TYPE = #{mainSearchDTO.type}
            </if>
        </where>
    </select>


    <!-- getList 쿼리 -->
    <select id="getList" resultMap="placeResultMap">
        SELECT ac.ACCOMMODATION_ADMIN_NO,
               MAX(ac.NAME) AS NAME,
               MAX(ac.ACCOMMODATION_TYPE) AS ACCOMMODATION_TYPE,
               MAX(ac.ADDRESS) AS ADDRESS,
               MIN(COALESCE(er.EXTRA_RATE, br.BASIC_RATE)) AS BASIC_RATE,
               MAX(ai.AC_IMAGE_FILE) AS AC_IMAGE_FILE
        FROM ACCOMMODATION ac
        JOIN ROOM r ON ac.ACCOMMODATION_ADMIN_NO = r.ACCOMMODATION_ADMIN_NO
        JOIN BASIC_RATE br ON r.ROOM_NO = br.ROOM_NO
        LEFT JOIN EXTRA_RATE er ON r.ROOM_NO = er.ROOM_NO
        AND #{mainSearchDTO.checkInDate} BETWEEN er.EXTRA_DATE_START AND er.EXTRA_DATE_END
        LEFT JOIN FACILITIES f ON ac.ACCOMMODATION_ADMIN_NO = f.ACCOMMODATION_ADMIN_NO
        LEFT JOIN ACCOMMODATION_IMAGE ai ON ac.ACCOMMODATION_ADMIN_NO = ai.ACCOMMODATION_ADMIN_NO
        LEFT JOIN RESERVE rs ON rs.ROOM_NO = r.ROOM_NO
        <where>
            <!-- 숙소 유형 조건 조회 -->
            <if test="mainSearchDTO.type != null and !mainSearchDTO.type.isEmpty()">
                ac.ACCOMMODATION_TYPE = #{mainSearchDTO.type}
            </if>

            <!-- 인원수 조건 (MAX_OCCUPANCY 필드와 비교) -->
            <if test="mainSearchDTO.personnel != 0">
                AND r.MAX_OCCUPANCY >= #{mainSearchDTO.personnel}
            </if>

            <!-- 조건 기간이 예약기간에 겹치지 않는지 조회 -->
            <if test="mainSearchDTO.checkInDate != null and !mainSearchDTO.checkInDate.isEmpty() and mainSearchDTO.checkOutDate != null and !mainSearchDTO.checkOutDate.isEmpty()">
                AND (rs.CHECK_IN_DATE IS NULL
                OR rs.CHECK_IN_DATE > #{mainSearchDTO.checkOutDate}
                OR rs.CHECK_OUT_DATE &lt; #{mainSearchDTO.checkInDate})
            </if>
        </where>
        GROUP BY ac.ACCOMMODATION_ADMIN_NO
        ORDER BY ac.ACCOMMODATION_ADMIN_NO
        LIMIT #{mainSearchDTO.boardLimit} OFFSET #{mainSearchDTO.offset}
    </select>



    <!-- getFacilities 쿼리 -->
    <select id="getFacilities" resultType="string">
        SELECT f.FACILITY_NAME
        FROM FACILITIES f
        JOIN ACCOMMODATION ac ON f.ACCOMMODATION_ADMIN_NO = ac.ACCOMMODATION_ADMIN_NO
        <where>
            <if test="mainSearchDTO.mainSearch != null and !mainSearchDTO.mainSearch.isEmpty()">
                (ac.NAME LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%')
                OR ac.ADDRESS LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%')
                OR ac.ACCOMMODATION_TYPE LIKE CONCAT('%', #{mainSearchDTO.mainSearch}, '%'))
            </if>
            <if test="mainSearchDTO.type != null and !mainSearchDTO.type.isEmpty()">
                AND ac.ACCOMMODATION_TYPE = #{mainSearchDTO.type}
            </if>
        </where>
    </select>


    <!--  체크인 체크아웃 클릭시 리스트 출력  -->

    <select id="getCheck" resultMap="placeResultMap">
        SELECT a.ACCOMMODATION_ADMIN_NO, a.NAME, a.ACCOMMODATION_TYPE, a.ADDRESS, r.CHECK_IN_TIME, MIN(br.BASIC_RATE) AS min_rate
        FROM accommodation a
        JOIN room r ON r.ACCOMMODATION_ADMIN_NO = a.ACCOMMODATION_ADMIN_NO
        JOIN basic_rate br ON br.ROOM_NO = r.ROOM_NO
        LEFT JOIN reserve re ON re.ROOM_NO = r.ROOM_NO
        WHERE
        (re.CHECK_IN_DATE IS NULL OR re.CHECK_IN_DATE &gt; #{checkoutDate})
        AND (re.CHECK_OUT_DATE IS NULL OR re.CHECK_OUT_DATE &lt; #{checkinDate})
        GROUP BY
        a.ACCOMMODATION_ADMIN_NO, a.NAME, a.ACCOMMODATION_TYPE, a.ADDRESS, r.CHECK_IN_TIME
    </select>

</mapper>
